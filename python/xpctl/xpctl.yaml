swagger: "2.0"
info:
  description: "This is a sample xpctl  server.  You can find out more about xpctl at [baseline](https://github.com/dpressel/baseline/blob/master/docs/xpctl.md)."
  version: "1.0.0"
  title: "xpctl"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "dev.nulll.io"
basePath: "/v2"
tags:
- name: "xpctl"
  description: "xpctl server"
  externalDocs:
    description: "Find out more"
    url: "https://github.com/dpressel/baseline/blob/master/docs/xpctl.md"
schemes:
- "https"
- "http"
paths:
  /put/{task}:
    post:
      tags:
      - "xpctl"
      summary: "Add a new experiment in database"
      description: ""
      operationId: "put_result"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "task"
        in: "path"
        type: "string"
        description: ""
        required: true
      - name: "experiment"
        in: "body"
        schema:
          $ref: "#/definitions/Experiment"
        required: True
      - name: "user"
        in: "query"
        type: "string"
        description: ""
        required: false
      - name: "label"
        in: "query"
        type: "string"
        description: ""
        required: false
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Response"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Response"
      x-swagger-router-controller: "swagger_server.controllers.xpctl_controller"

  /updatelabel/{task}/{eid}/:
    get:
      tags:
      - "xpctl"
      summary: "update label for an experiment"
      description: ""
      operationId: "update_label"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "task"
        in: "path"
        type: "string"
        description: ""
        required: true
      - name: "eid"
        in: "path"
        type: "string"
        description: ""
        required: true
      - name: "label"
        in: "query"
        type: "string"
        description: ""
        required: true
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Response"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Response"
      x-swagger-router-controller: "swagger_server.controllers.xpctl_controller"

  /delete/{task}/{eid}:
    get:
      tags:
      - "xpctl"
      summary: "delete an experiment from the database"
      description: ""
      operationId: "remove_experiment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "task"
        in: "path"
        type: "string"
        description: ""
        required: true
      - name: "eid"
        in: "path"
        type: "string"
        description: ""
        required: true
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Response"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Response"
      x-swagger-router-controller: "swagger_server.controllers.xpctl_controller"

  /details/{task}:
      get:
        tags:
        - "xpctl"
        summary: "list all experiments for this property and value"
        description: "list all experiments for this property (sha1/ username) and value (1cd21df91770b4dbed64a683558b062e3dee61f0/ dpressel)"
        operationId: "list_experiments_by_prop"
        produces:
        - "application/json"
        parameters:
        - name: "task"
          in: "path"
          description: "task name"
          required: true
          type: "string"
        - name: "prop"
          in: "query"
          description: "property: username, dataset"
          type: "string"
          required: true
        - name: "value"
          in: "query"
          description: "value: dpressel, SST2"
          type: "string"
          required: true
        - name: "user"
          in: "query"
          type: "array"
          items:
            type: "string"
        - name: "metric"
          in: "query"
          type: "array"
          items:
            type: "string"
        - name: "sort"
          in: "query"
          type: "string"
        - name: "event_type"
          in: "query"
          type: "string"
        responses:
          200:
            description: "successful operation"
            schema:
              type: "array"
              items:
                $ref: "#/definitions/Experiment"
          400:
            description: "Invalid status value"
          default:
            description: "unexpected error"
            schema:
              $ref: "#/definitions/Response"
        x-swagger-router-controller: "swagger_server.controllers.xpctl_controller"

  /details/{task}/{sha1}:
    get:
      tags:
      - "xpctl"
      summary: "list all experiments for this sha1"
      description: "list all experiments for this sha1"
      operationId: "list_experiments_by_sha1"
      produces:
      - "application/json"
      parameters:
      - name: "task"
        in: "path"
        description: "task name"
        required: true
        type: "string"
      - name: "sha1"
        in: "path"
        description: "sha1"
        type: "string"
        required: true
      - name: "user"
        in: "query"
        type: "array"
        items:
          type: "string"
      - name: "metric"
        in: "query"
        type: "array"
        items:
          type: "string"
      - name: "sort"
        in: "query"
        type: "string"
      - name: "event_type"
        in: "query"
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Experiment"
        400:
          description: "Invalid status value"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Response"
      x-swagger-router-controller: "swagger_server.controllers.xpctl_controller"

  /results/{task}:
    get:
      tags:
      - "xpctl"
      summary: "Find results by property and value"
      description: "Find results by property and value"
      operationId: "get_results_by_prop"
      produces:
      - "application/json"
      parameters:
      - name: "task"
        in: "path"
        description: "task name"
        required: true
        type: "string"
      - name: "prop"
        in: "query"
        description: "property of an experiment dataset, username, label etc"
        required: true
        type: "string"
      - name: "value"
        in: "query"
        description: "value of the property. eg: prop=username&value=dpressel"
        type: "string"
        required: true
      - name: "reduction_dim"
        in: "query"
        type: "string"
        description: "which dimension to reduce on, default=sha1"
      - name: "metric"
        in: "query"
        type: "array"
        items:
          type: "string"
        description: "metric"
      - name: "sort"
        in: "query"
        type: "string"
        description: "metric to sort results on"
      - name: "numexp_reduction_dim"
        in: "query"
        type: "integer"
        description: "max number of experiments in an aggregate group"
      - name: "event_type"
        in: "query"
        type: "string"
        description: "train/dev/test"
      responses:
        200:
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/ExperimentAggregate"
        400:
          description: "Invalid dataset"
        404:
          description: "Experiment not found"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Response"
      x-swagger-router-controller: "swagger_server.controllers.xpctl_controller"

  /results/{task}/{dataset}:
      get:
        tags:
        - "xpctl"
        summary: "Find results by dataset and task"
        description: "Returns a single experiment"
        operationId: "get_results_by_dataset"
        produces:
        - "application/json"
        parameters:
        - name: "task"
          in: "path"
          description: "task name"
          required: true
          type: "string"
        - name: "dataset"
          in: "path"
          description: "dataset name"
          required: true
          type: "string"
        - name: "reduction_dim"
          in: "query"
          type: "string"
          description: "which dimension to reduce on, default=sha1"
        - name: "metric"
          in: "query"
          type: "array"
          items:
            type: "string"
          description: "metric"
        - name: "sort"
          in: "query"
          type: "string"
          description: "metric to sort results on"
        - name: "numexp_reduction_dim"
          in: "query"
          type: "integer"
          description: "max number of experiments in an aggregate group"
        - name: "event_type"
          in: "query"
          type: "string"
          description: "train/dev/test"
        responses:
          200:
            description: "successful operation"
            schema:
              type: array
              items:
                $ref: "#/definitions/ExperimentAggregate"
          400:
            description: "Invalid dataset"
          404:
            description: "Experiment not found"
          default:
            description: "unexpected error"
            schema:
              $ref: "#/definitions/Response"
        x-swagger-router-controller: "swagger_server.controllers.xpctl_controller"

  /{task}/{eid}:
    get:
      tags:
      - "xpctl"
      summary: "Find experiment by id"
      description: "Returns a single experiment"
      operationId: "experiment_details"
      produces:
      - "application/json"
      parameters:
      - name: "task"
        in: "path"
        description: "task name"
        required: true
        type: "string"
      - name: "eid"
        in: "path"
        description: "ID of experiment to return"
        required: true
        type: "string"
      - name: "event_type"
        in: "query"
        description: ""
        required: false
        type: "string"
      - name: "metric"
        in: "query"
        description: ""
        required: false
        type: "array"
        items:
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
           $ref: "#/definitions/Experiment"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Experiment not found"
        500:
          description: "Server threw an error"
          schema:
            $ref: "#/definitions/Response"
      x-swagger-router-controller: "swagger_server.controllers.xpctl_controller"

  /config2json/{task}/{sha1}:
      get:
        tags:
        - "xpctl"
        summary: "get config for sha1"
        description: "config for sha1"
        operationId: "config2json"
        produces:
        - "application/json"
        parameters:
        - name: "task"
          in: "path"
          description: "task"
          required: true
          type: "string"
        - name: "sha1"
          in: "path"
          description: "sha1"
          required: true
          type: "string"
        responses:
          200:
            description: "successful operation"
            schema:
              $ref: "#/definitions/Experiment"
          400:
            description: "Invalid ID supplied"
          404:
            description: "Experiment not found"
          default:
            description: "unexpected error"
            schema:
              $ref: "#/definitions/Response"
        x-swagger-router-controller: "swagger_server.controllers.xpctl_controller"

  /getmodelloc/{task}/{eid}:
        get:
          tags:
          - "xpctl"
          summary: "get model loc for experiment"
          description: "get model loc for experiment"
          operationId: "get_model_location"
          produces:
          - "application/json"
          parameters:
          - name: "task"
            in: "path"
            description: "task"
            required: true
            type: "string"
          - name: "eid"
            in: "path"
            description: "experiment id"
            required: true
            type: "string"
          responses:
            200:
              description: "successful operation"
              schema:
                $ref: "#/definitions/Response"
            400:
              description: "Invalid ID supplied"
            404:
              description: "Experiment not found"
            default:
              description: "unexpected error"
              schema:
                $ref: "#/definitions/Response"
          x-swagger-router-controller: "swagger_server.controllers.xpctl_controller"

  /summary/:
        get:
          tags:
          - "xpctl"
          summary: "get summary for task"
          description: "summary for task"
          operationId: "summary"
          produces:
          - "application/json"
          responses:
            200:
              description: "successful operation"
              schema:
                type: "array"
                items:
                 $ref: "#/definitions/TaskSummary"
            400:
              description: "Invalid ID supplied"
            404:
              description: "Experiment not found"
            default:
              description: "unexpected error"
              schema:
                $ref: "#/definitions/Response"
          x-swagger-router-controller: "swagger_server.controllers.xpctl_controller"

  /summary/{task}/:
          get:
            tags:
            - "xpctl"
            summary: "get summary for task"
            description: "summary for task"
            operationId: "task_summary"
            produces:
            - "application/json"
            parameters:
            - name: "task"
              in: "path"
              description: "task"
              required: true
              type: "string"
            responses:
              200:
                description: "successful operation"
                schema:
                  $ref: "#/definitions/TaskSummary"
              400:
                description: "Invalid ID supplied"
              404:
                description: "Experiment not found"
              default:
                description: "unexpected error"
                schema:
                  $ref: "#/definitions/Response"
            x-swagger-router-controller: "swagger_server.controllers.xpctl_controller"

securityDefinitions:
  xpctl_auth:
    type: "oauth2"
    authorizationUrl: "http://dev.null.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:xpctl: "modify tasks experiments"
      read:xpctl: "read tasks"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"

definitions:

  Result:
    type: "object"
    required:
    - "metric"
    - "value"
    - "tick_type"
    - "tick"
    - "phase"
    properties:
      metric:
        type: "string"
        example: "f1"
      value:
        type: "number"
        format: "float32"
        example: 0.365897
      tick_type:
        type: "string"
      tick:
        type: "integer"
        format: "int32"
        example: 1
      phase:
        type: "string"
        
  AggregateResult:
    type: "object"
    required:
    - "metric"
    - "values"
    properties:
      metric:
        type: "string"
        example: "f1"
      values:
        type: "array"
        items: 
          type: "object"
          
  Experiment:
    type: "object"
    properties:
      task:
        type: "string"
        example: "classify"
      eid:
        type: "string"
        example: "5b074775b5536c4bc124d95f"
      sha1:
        type: "string"
        example: "8ab6ab6ee8fdf14b111223e2edf48750c30c7e51"
      config:
        type: "string"
        example: "{dataset: sst2}"
      dataset:
        type: "string"
        example: "SST2"
      username:
        type: "string"
        example: "someone"
      hostname:
        type: "string"
        example: "somehost"
      exp_date:
        type: "string"
        example: "2019-05-02T23:29:46.578675"
        format: "date"
      label:
        type: "string"
        example: "label"  
      version:
        type: "string"
        example: "1.4.1"
      train_events:
        type: "array"
        items:
          $ref: "#/definitions/Result"
      valid_events:
        type: "array"
        items:
          $ref: "#/definitions/Result"
      test_events:
        type: "array"
        items:
          $ref: "#/definitions/Result"
  
  ExperimentAggregate:
    type: "object"
    properties:
      task:
        type: "string"
        example: "classify"
      eid:
        type: "string"
        example: "5b074775b5536c4bc124d95f"
      sha1:
        type: "string"
        example: "8ab6ab6ee8fdf14b111223e2edf48750c30c7e51"
      config:
        type: "string"
        example: "{dataset: sst2}"
      dataset:
        type: "string"
        example: "SST2"
      username:
        type: "string"
        example: "someone"
      hostname:
        type: "string"
        example: "somehost"
      exp_date:
        type: "string"
        example: "2019-05-02T23:29:46.578675"
        format: "date"
      label:
        type: "string"
        example: "label"  
      version:
        type: "string"
        example: "1.4.1"
      num_exps:
        type: "integer"
        format: "int32"
        example: 1
      train_events:
        type: "array"
        items:
          $ref: "#/definitions/AggregateResult"
      valid_events:
        type: "array"
        items:
          $ref: "#/definitions/AggregateResult"
      test_events:
        type: "array"
        items:
          $ref: "#/definitions/AggregateResult"

  TaskSummary:
    type: "object"
    required:
    - "task"
    - "summary"
    properties:
      task:
        type: "string"
      summary:
        type: "object"

  Response:
    type: "object"
    required:
    - "code"
    - "message"
    - "response_type"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
      response_type:
        type: "string"
        enum: ["success", "error"]


externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"