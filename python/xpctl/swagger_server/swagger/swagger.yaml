---
swagger: "2.0"
info:
  description: "This is a sample xpctl  server.  You can find out more about xpctl\
    \ at [baseline](https://github.com/dpressel/baseline/blob/master/docs/xpctl.md)."
  version: "1.0.0"
  title: "xpctl"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "dev.nulll.io"
basePath: "/v2"
tags:
- name: "xpctl"
  description: "xpctl server"
  externalDocs:
    description: "Find out more"
    url: "https://github.com/dpressel/baseline/blob/master/docs/xpctl.md"
schemes:
- "https"
- "http"
paths:
  /putresult:
    post:
      tags:
      - "xpctl"
      summary: "Add a new experiment in database"
      description: ""
      operationId: "put_result"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "experiment"
        description: "new mead experiment"
        required: true
        schema:
          $ref: "#/definitions/Experiment"
      responses:
        200:
          description: "success"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.xpctl_controller"
  /findbylabel:
    get:
      tags:
      - "xpctl"
      summary: "Finds experiment by label"
      description: "Multiple label values can be provided with comma separated strings"
      operationId: "find_by_label"
      produces:
      - "application/json"
      parameters:
      - name: "label"
        in: "query"
        description: "label values that need to be considered for filter"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Experiment"
        400:
          description: "Invalid status value"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.xpctl_controller"
  /results/{task}:
    get:
      tags:
      - "xpctl"
      summary: "Find results by dataset and task"
      description: "Returns a single experiment"
      operationId: "get_results"
      produces:
      - "application/json"
      parameters:
      - name: "task"
        in: "path"
        description: "task name"
        required: true
        type: "string"
      - name: "prop"
        in: "query"
        description: "property of an experiment dataset, username, label etc"
        required: true
        type: "string"
      - name: "value"
        in: "query"
        description: "value of the property. eg: prop=username&value=dpressel"
        required: true
        type: "string"
      - name: "reduction_dim"
        in: "query"
        description: "which dimension to reduce on, default=sha1"
        required: false
        type: "string"
      - name: "metric"
        in: "query"
        description: "metric"
        required: false
        type: "string"
      - name: "sort"
        in: "query"
        description: "metric to sort results on"
        required: false
        type: "string"
      - name: "nconfig"
        in: "query"
        description: "number of experiments to aggregate"
        required: false
        type: "integer"
      - name: "event_type"
        in: "query"
        description: "train/dev/test"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ExperimentAggregate"
        400:
          description: "Invalid dataset"
        404:
          description: "Experiment not found"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.xpctl_controller"
  /{task}/{eid}:
    get:
      tags:
      - "xpctl"
      summary: "Find experiment by id"
      description: "Returns a single experiment"
      operationId: "experiment_details"
      produces:
      - "application/json"
      parameters:
      - name: "task"
        in: "path"
        description: "task name"
        required: true
        type: "string"
      - name: "eid"
        in: "path"
        description: "ID of experiment to return"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Experiment"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Experiment not found"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.xpctl_controller"
    post:
      tags:
      - "xpctl"
      summary: "Updates an experiment in the database with form data"
      description: ""
      operationId: "update_label"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "task"
        in: "path"
        description: "task name"
        required: true
        type: "string"
      - name: "eid"
        in: "path"
        description: "ID of experiment that needs to be updated"
        required: true
        type: "string"
        format: "int64"
      - name: "label"
        in: "formData"
        description: "Updated label of the experiment"
        required: false
        type: "string"
      responses:
        200:
          description: "success"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.xpctl_controller"
    delete:
      tags:
      - "xpctl"
      summary: "Deletes an experiment"
      description: ""
      operationId: "remove_experiment"
      produces:
      - "application/json"
      parameters:
      - name: "task"
        in: "path"
        description: "task name"
        required: true
        type: "string"
      - name: "eid"
        in: "path"
        description: "experiment id to delete"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
        400:
          description: "Invalid ID supplied"
        404:
          description: "experiment not found"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.xpctl_controller"
securityDefinitions:
  xpctl_auth:
    type: "oauth2"
    authorizationUrl: "http://dev.null.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:xpctl: "modify tasks experiments"
      read:xpctl: "read tasks"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Result:
    type: "object"
    required:
    - "epoch"
    - "metric"
    - "value"
    properties:
      metric:
        type: "string"
        example: "f1"
      value:
        type: "number"
        format: "float32"
        example: 0.365897
      epoch:
        type: "integer"
        format: "int32"
        example: 1
    example:
      metric: "f1"
      epoch: 1
      value: 0.365897
  AggregateResult:
    type: "object"
    required:
    - "metric"
    - "values"
    properties:
      metric:
        type: "string"
        example: "f1"
      values:
        type: "array"
        items:
          type: "object"
          properties: {}
    example:
      metric: "f1"
      values:
      - "{}"
      - "{}"
  Experiment:
    type: "object"
    properties:
      task:
        type: "string"
        example: "classify"
      eid:
        type: "string"
        example: "5b074775b5536c4bc124d95f"
      sha1:
        type: "string"
        example: "8ab6ab6ee8fdf14b111223e2edf48750c30c7e51"
      config:
        type: "string"
        example: "{dataset: sst2}"
      dataset:
        type: "string"
        example: "SST2"
      username:
        type: "string"
        example: "someone"
      hostname:
        type: "string"
        example: "somehost"
      exp_date:
        type: "string"
        format: "date"
        example: "2019-05-02T23:29:46.578675"
      label:
        type: "string"
        example: "label"
      version:
        type: "string"
        example: "1.4.1"
      train_events:
        type: "array"
        items:
          $ref: "#/definitions/Result"
      dev_events:
        type: "array"
        items:
          $ref: "#/definitions/Result"
      test_events:
        type: "array"
        items:
          $ref: "#/definitions/Result"
    example:
      eid: "5b074775b5536c4bc124d95f"
      train_events:
      - metric: "f1"
        epoch: 1
        value: 0.365897
      - metric: "f1"
        epoch: 1
        value: 0.365897
      label: "label"
      version: "1.4.1"
      sha1: "8ab6ab6ee8fdf14b111223e2edf48750c30c7e51"
      dev_events:
      - metric: "f1"
        epoch: 1
        value: 0.365897
      - metric: "f1"
        epoch: 1
        value: 0.365897
      hostname: "somehost"
      task: "classify"
      exp_date: "2019-05-02T23:29:46.578675"
      config: "{dataset: sst2}"
      dataset: "SST2"
      test_events:
      - metric: "f1"
        epoch: 1
        value: 0.365897
      - metric: "f1"
        epoch: 1
        value: 0.365897
      username: "someone"
  ExperimentAggregate:
    type: "object"
    properties:
      task:
        type: "string"
        example: "classify"
      eid:
        type: "string"
        example: "5b074775b5536c4bc124d95f"
      sha1:
        type: "string"
        example: "8ab6ab6ee8fdf14b111223e2edf48750c30c7e51"
      config:
        type: "string"
        example: "{dataset: sst2}"
      dataset:
        type: "string"
        example: "SST2"
      username:
        type: "string"
        example: "someone"
      hostname:
        type: "string"
        example: "somehost"
      exp_date:
        type: "string"
        format: "date"
        example: "2019-05-02T23:29:46.578675"
      label:
        type: "string"
        example: "label"
      version:
        type: "string"
        example: "1.4.1"
      num_exps:
        type: "integer"
        format: "int32"
        example: 1
      train_events:
        type: "array"
        items:
          $ref: "#/definitions/AggregateResult"
      dev_events:
        type: "array"
        items:
          $ref: "#/definitions/AggregateResult"
      test_events:
        type: "array"
        items:
          $ref: "#/definitions/AggregateResult"
    example:
      eid: "5b074775b5536c4bc124d95f"
      train_events:
      - metric: "f1"
        values:
        - "{}"
        - "{}"
      - metric: "f1"
        values:
        - "{}"
        - "{}"
      num_exps: 1
      label: "label"
      version: "1.4.1"
      sha1: "8ab6ab6ee8fdf14b111223e2edf48750c30c7e51"
      dev_events:
      - metric: "f1"
        values:
        - "{}"
        - "{}"
      - metric: "f1"
        values:
        - "{}"
        - "{}"
      hostname: "somehost"
      task: "classify"
      exp_date: "2019-05-02T23:29:46.578675"
      config: "{dataset: sst2}"
      dataset: "SST2"
      test_events:
      - metric: "f1"
        values:
        - "{}"
        - "{}"
      - metric: "f1"
        values:
        - "{}"
        - "{}"
      username: "someone"
  Error:
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
